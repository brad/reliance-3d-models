# Whenever a new version tag is pushed to main, this workflow runs `npm run build`
# and publishes dist/release-<version>.zip to the github releases page
name: Release
on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    container: node:latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci
      - name: Install openscad/jq/zip
        run: |
          apt-get update
          apt-get install -y openscad jq zip

      - name: Lint and test
        run: |
          npm run lint
          npm run test

      - name: Build
        run: npm run build

      - name: Extract Release Notes
        id: release_notes
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          RELEASE_NOTES=$(awk -v tag=$TAG_NAME '/^## /{flag=0} /^## \['tag'\]/,/^## /{if ($0!="") print; if (/^## /) flag=1} END {if (flag) exit 1}' CHANGELOG.md)
          if [ -z "$RELEASE_NOTES" ]; then
            echo "Release notes for $TAG_NAME could not be found."
            exit 1
          fi
          RELEASE_NOTES="${RELEASE_NOTES//'%'/'%25'}"
          RELEASE_NOTES="${RELEASE_NOTES//$'\n'/'%0A'}"
          RELEASE_NOTES="${RELEASE_NOTES//$'\r'/'%0D'}"
          echo "::set-output name=notes::$RELEASE_NOTES"

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ${{ steps.release_notes.outputs.notes }}
          draft: false
          prerelease: false
